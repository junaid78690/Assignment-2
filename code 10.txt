class Coordinate {
    protected double x, y;

    Coordinate(double x, double y) {
        this.x = x;
        this.y = y;
    }

    double getDistance() {
        return Math.sqrt(x * x + y * y);
    }
}

class ExtendedCoordinate extends Coordinate {
    private Double z; 

    ExtendedCoordinate(double x, double y) {
        super(x, y);
        this.z = null;
    }

    ExtendedCoordinate(double x, double y, double z) {
        super(x, y);
        this.z = z;
    }

    @Override
    double getDistance() {
        if (z == null) {
            return super.getDistance();  // 2D distance
        } else {
            return Math.sqrt(x * x + y * y + z * z);  // 3D distance
        }
    }

    double getDistanceBetween(ExtendedCoordinate other) {
        double dz = 0;
        if (this.z != null && other.z != null) {
            dz = this.z - other.z;
        }
        return Math.sqrt(
            Math.pow(this.x - other.x, 2) +
            Math.pow(this.y - other.y, 2) +
            dz * dz
        );
    }
}

public class CoordinateTest {
    public static void main(String[] args) {
        ExtendedCoordinate point2D = new ExtendedCoordinate(3, 4);
        ExtendedCoordinate point3D1 = new ExtendedCoordinate(1, 2, 2);
        ExtendedCoordinate point3D2 = new ExtendedCoordinate(4, 6, 5);

        System.out.println("Distance of 2D point from origin: " + point2D.getDistance());
        System.out.println("Distance of 3D point1 from origin: " + point3D1.getDistance());
        System.out.println("Distance between 3D point1 and point2: " + point3D1.getDistanceBetween(point3D2));
    }
}
